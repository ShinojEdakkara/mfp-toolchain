version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](toolchain.svg?localize)'
  icon: icon.svg
  required:
    - sample-mfp-kube-creation
    - sample-app-build
    - sample-adapter-build
    - sample-repo
    - test-repo
    - kube-repo
  info:
    git url: >-
      [https://github.com/ShinojEdakkara/mfp80_toolchain](https://github.com/ShinojEdakkara/mfp80_toolchain)
    git branch: >-
      [master](https://github.com/ShinojEdakkara/mfp80_toolchain/tree/master)
toolchain:
  name: 'mfp-devops-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  sample-repo:
    service_id: githubpublic
    parameters:
      repo_name: '{{toolchain.name}}'
      repo_url: 'https://git.ng.bluemix.net/shinoj.zacharias/MFP80DevOps'
      type: clone
      has_issues: true
      enable_traceability: true
  test-repo:
      service_id: githubpublic
      parameters:
        repo_name: 'test-{{toolchain.name}}'
        repo_url: 'https://github.com/ShinojEdakkara/test-repo-mfp'
        type: clone
        has_issues: true
        enable_traceability: true
  sample-mfp-service-creation:
    service_id: pipeline
    name: 'create-server-service-{{services.sample-repo.parameters.repo_name}}'
    ui-pipeline: true
    configuration:
      content:
        $text: pipelinemfpservicecreate.yml
      env:
        CF_APP_NAME: '{{form.pipeline.parameters.prod-app-name}}'
        PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
        PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
        PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
      execute: true
  sample-app-build:
    service_id: pipeline
    parameters:
      services:
        - sample-repo
        - test-repo
      name: 'apps-{{services.sample-repo.parameters.repo_name}}'
      ui-pipeline: true
      configuration:
        content:
          $text: pipelineApps.yml
        env:
          SAMPLE_REPO: sample-repo
          TEST_REPO: test-repo
          CF_APP_NAME: '{{form.pipeline.parameters.prod-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
        execute: true
  sample-adapter-build:
    service_id: pipeline
    parameters:
      services:
        - sample-repo
      name: 'adapters-{{services.sample-repo.parameters.repo_name}}'
      ui-pipeline: true
      configuration:
        content:
          $text: pipelineAdapters.yml
        env:
          SAMPLE_REPO: sample-repo
          CF_APP_NAME: '{{form.pipeline.parameters.prod-app-name}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
        execute: true
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      prod-app-name: '{{services.sample-repo.parameters.repo_name}}'
    schema:
      $ref: deploy.json
